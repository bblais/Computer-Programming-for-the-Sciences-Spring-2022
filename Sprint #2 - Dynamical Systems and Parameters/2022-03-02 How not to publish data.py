#!/usr/bin/env python
# coding: utf-8

# In[6]:


get_ipython().run_line_magic('pylab', 'inline')


# View the data at TPT Online, in an appendix at http://dx.doi.org/10.1119/5.0041057
# 
# 
# ![image.png](attachment:116abd41-b485-49ea-8385-92c85aaf8d4d.png)

# In[1]:


S="""
time (s) v (m/s)
00 0.0237 0.172 0.0372 0.3495 0.0608 0.5492 0.0879 0.7378 0.1082 0.9153 0.1217 1.082 0.1454 1.281 0.1622 1.465 0.1825 1.653 0.1994 1.814 0.2197 1.997 0.2366 2.186 0.2569 2.38 0.2738 2.557 0.294 2.724 0.3176 2.929 0.3414 3.112 0.3583 3.284 0.3718 3.461 0.3954 3.65 0.4157 3.833 0.4325 4.016 0.4461 4.194 0.4698 4.388 0.4968 4.565 0.5137 4.754 0.5306 4.937 0.5611 5.103 0.6085 5.297 0.6524 5.486 0.7032 5.658 0.7506 5.846 0.7946 6.035 0.8521 6.207 0.8996 6.39 0.947 6.576 0.9876 6.756
                                                                                  
  1.038 6.934 1.096 7.122 1.16 7.3 1.225 7.483 1.289 7.66 1.36 7.854 1.428 8.037 1.485 8.209 1.553 8.403 1.607 8.575 1.685 8.764 1.743 8.941 1.834 9.108 1.939 9.274 2.048 9.429 2.146 9.606 2.247 9.767 2.356 9.922 2.464 10.094 2.566 10.25 2.674 10.405 2.776 10.538 2.881 10.654 2.999 10.771 3.104 10.893 3.22 11.02 3.328 11.136 3.44 11.264 3.551 11.38 3.663 11.497 3.775 11.524 3.89 11.53 4.002 11.546 4.117 11.563 4.222 11.585 4.338 11.601 4.446 11.618 4.561 11.673 4.68 11.712 4.785 11.767 4.904 11.828 5.012 11.889 5.124 11.95 5.242 11.94 5.351 12.044 5.463 12.066
                                                                                            
  5.571 12.083 5.683 12.088 5.795 12.116
5.91 12.154 6.022 12.171 6.137 12.193 6.252 12.209 6.357 12.232 6.466 12.248 6.577 12.265 6.686 12.281 6.801 12.309 6.916 12.336 7.028 12.314 7.137 12.292 7.245 12.253
7.36 12.219 7.475 12.18 7.587 12.164 7.696 12.119 7.808 12.102 7.926 12.091 8.031 12.074 8.143 12.074 8.255 12.057 8.377 12.057 8.519 12.063 8.628 12.057 8.739 12.107 8.851 12.151
8.97 12.173 9.075 12.079 9.19 11.99 9.302 11.901 9.407 11.812
                                                                      
                                                                    """


# In[2]:


S="""
0 0 0.0237 0.172 0.0372 0.3495 0.0608 0.5492 0.0879 0.7378 0.1082 0.9153 0.1217 1.082 0.1454 1.281 0.1622 1.465 0.1825 1.653 0.1994 1.814 0.2197 1.997 0.2366 2.186 0.2569 2.38 0.2738 2.557 0.294 2.724 0.3176 2.929 0.3414 3.112 0.3583 3.284 0.3718 3.461 0.3954 3.65 0.4157 3.833 0.4325 4.016 0.4461 4.194 0.4698 4.388 0.4968 4.565 0.5137 4.754 0.5306 4.937 0.5611 5.103 0.6085 5.297 0.6524 5.486 0.7032 5.658 0.7506 5.846 0.7946 6.035 0.8521 6.207 0.8996 6.39 0.947 6.576 0.9876 6.756
                                                                                  
  1.038 6.934 1.096 7.122 1.16 7.3 1.225 7.483 1.289 7.66 1.36 7.854 1.428 8.037 1.485 8.209 1.553 8.403 1.607 8.575 1.685 8.764 1.743 8.941 1.834 9.108 1.939 9.274 2.048 9.429 2.146 9.606 2.247 9.767 2.356 9.922 2.464 10.094 2.566 10.25 2.674 10.405 2.776 10.538 2.881 10.654 2.999 10.771 3.104 10.893 3.22 11.02 3.328 11.136 3.44 11.264 3.551 11.38 3.663 11.497 3.775 11.524 3.89 11.53 4.002 11.546 4.117 11.563 4.222 11.585 4.338 11.601 4.446 11.618 4.561 11.673 4.68 11.712 4.785 11.767 4.904 11.828 5.012 11.889 5.124 11.95 5.242 11.94 5.351 12.044 5.463 12.066
                                                                                            
  5.571 12.083 5.683 12.088 5.795 12.116
5.91 12.154 6.022 12.171 6.137 12.193 6.252 12.209 6.357 12.232 6.466 12.248 6.577 12.265 6.686 12.281 6.801 12.309 6.916 12.336 7.028 12.314 7.137 12.292 7.245 12.253
7.36 12.219 7.475 12.18 7.587 12.164 7.696 12.119 7.808 12.102 7.926 12.091 8.031 12.074 8.143 12.074 8.255 12.057 8.377 12.057 8.519 12.063 8.628 12.057 8.739 12.107 8.851 12.151
8.97 12.173 9.075 12.079 9.19 11.99 9.302 11.901 9.407 11.812
                                                                      
                                                                    """


# In[5]:


parts=S.split()
parts[:20]


# In[8]:


values=array([float(_) for _ in parts])
values[:20]


# In[9]:


t=values[::2]
v=values[1::2]
t[:20],v[:20]


# In[10]:


plot(t,v,'-o')


# In[11]:


import pandas as pd


# In[14]:


data=pd.DataFrame({'t':t,'v':v})
data


# In[15]:


data.to_excel('usain_bolt_speed.xlsx')


# In[ ]:




